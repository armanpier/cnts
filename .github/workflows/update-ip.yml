name: Update server IP for selected ports

on:
  workflow_dispatch:
    inputs:
      new_server:
        description: 'New server IP or domain'
        required: true
        default: '127.0.0.1'

jobs:
  update-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Write updater script
        run: |
          cat > update_server.py << 'PY' 
import json, sys

new_server = sys.argv[1]
file_path = sys.argv[2]

with open(file_path, 'r', encoding='utf-8') as f:
    data = json.load(f)

def update_server(obj):
    if isinstance(obj, dict):
        if 'server' in obj and 'server_port' in obj and obj['server_port'] in [45500, 30067]:
            obj['server'] = new_server
        for v in obj.values():
            update_server(v)
    elif isinstance(obj, list):
        for item in obj:
            update_server(item)

update_server(data)

with open(file_path, 'w', encoding='utf-8') as f:
    json.dump(data, f, indent=2)
PY

      - name: Run updater on test
        run: |
          NEW="${{ github.event.inputs.new_server }}"
          echo "Before:"
          cat test || echo "(test not found)"
          python3 update_server.py "$NEW" test
          echo "After:"
          cat test

      - name: Commit & push if changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin main --rebase
          git add test
          git diff --cached --quiet || git commit -m "Update server to ${{ github.event.inputs.new_server }}"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
